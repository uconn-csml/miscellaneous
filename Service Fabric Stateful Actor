https://docs.microsoft.com/en-us/dotnet/api/microsoft.servicefabric.actors.runtime.iactorstatemanager

using System.Threading.Tasks;
using Microsoft.ServiceFabric.Actors;
using Microsoft.ServiceFabric.Actors.Runtime;
using Actor1.Interfaces;
using System;

namespace Actor1
{
    [StatePersistence(StatePersistence.Persisted)]
    internal class Actor1 : Actor, IActor1
    {
        public Actor1(ActorService actorService, ActorId actorId)
            : base(actorService, actorId)
        {
        }

        Task<int> IActor1.Hello()
        {
            this.StateManager.AddStateAsync("age", 46);
            this.StateManager.SetStateAsync("age", 23);
            return this.StateManager.GetStateAsync<int>("age");
            //State can also be retrieved using a TryGet method that does not throw if an entry does not exist for a given key:
            //this.StateManager.TryGetStateAsync<int>("age")
        }
    }
}
