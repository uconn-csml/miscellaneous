Service Fabric Explorer: http://localhost:19080/

1. Service Fabric Application --> .NET Core --> Web API
2. Right-Click [Application Project] --> Add --> New Service Fabric Service --> Actor Service
3. [Web API Project] --> Add Reference  --> Actor1.Interfaces
4. [Web API Project] --> NuGet --> Microsoft.ServiceFabric.Actors --> Check [Web1] --> Install
5. Copy:

# Actor1 class
using System.Threading.Tasks;
using Microsoft.ServiceFabric.Actors;
using Microsoft.ServiceFabric.Actors.Runtime;
using Actor1.Interfaces;

namespace Actor1
{
    [StatePersistence(StatePersistence.Persisted)]
    internal class Actor1 : Actor, IActor1
    {
        public Actor1(ActorService actorService, ActorId actorId)
            : base(actorService, actorId)
        {
        }
      
        Task<int> IActor1.Hello()
        {
            return Task.FromResult<int>(0);
        }
    }
}

# Actor1.Interfaces 
using System.Threading.Tasks;
using Microsoft.ServiceFabric.Actors;

namespace Actor1.Interfaces
{
    public interface IActor1 : IActor
    {
        Task<int> Hello();
    }
}

# Controller class
using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.ServiceFabric.Actors;
using Actor1.Interfaces;
using Microsoft.ServiceFabric.Actors.Client;

namespace Web1.Controllers
{
    [Route("api/[controller]")]
    public class ValuesController : Controller
    {
        // GET api/values
        [HttpGet]
        public async Task<string> Get()
        {
            // Create a randomly distributed actor ID
            ActorId actorId = ActorId.CreateRandom();
            //Change the name of Application
            var actor1 = ActorProxy.Create<IActor1>(actorId, new Uri("fabric:/Application15/Actor1ActorService"));
            int count = await actor1.Hello();
            return count.ToString();
        }
    }
}

6. Build --> Configuration Manager --> Web1 & Actor1.Interfaces --> Any CPU
